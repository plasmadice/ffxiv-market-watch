{"version":3,"sources":["data/mario-coin.wav","data/finalf.ttf","components/Item.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Item","_ref","info","name","competitor","userName","muted","lister","CraftSignature","price","PricePerUnit","secondPrice","alert","Audio","soundFile","play","react_default","a","createElement","Card","style","width","margin","backgroundColor","Body","Title","Subtitle","className","ListGroup","Text","ID","App","state","items","counter","itemInfo","itemField","componentDidMount","_this","staggerCalls","componentDidUpdate","length","setState","handleSubmit","event","preventDefault","startsWith","newItems","filter","item","slice","newItemInfo","push","Number","handleUserNameChange","target","value","handleItemFieldChange","handleMute","prevState","props","setInterval","getPrices","axios","get","concat","then","res","status","data","catch","error","console","log","_this2","this","Button","onClick","variant","Form","onSubmit","Row","Col","Control","onChange","type","placeholder","block","textAlign","map","cheapestItem","Prices","sort","b","key","Math","random","Name","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oHCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kNCIzB,SAASC,EAATC,GAA2D,IAA3CC,EAA2CD,EAA3CC,KAAMC,EAAqCF,EAArCE,KAAMC,EAA+BH,EAA/BG,WAAYC,EAAmBJ,EAAnBI,SAAUC,EAASL,EAATK,MACzDC,EAASL,EAAKM,eACdC,EAAQP,EAAKQ,aACbC,EAAcP,EAAWM,aACzBE,EAAQ,IAAIC,MAAMC,KAMxB,OAJIT,IAAaE,GAAWD,GAC1BM,EAAMG,OAINC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,gBAAiB,YAE1DP,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAKM,MAAN,KAAatB,GACba,EAAAC,EAAAC,cAACC,EAAA,EAAKO,SAAN,CAAeC,UAAU,mBAAmBpB,GAC5CS,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACU,EAAA,EAAU5B,KAAX,CACEoB,MACEf,IAAaE,EACT,CAAEgB,gBAAiB,OACnB,CAAEA,gBAAiB,YAJ3B,iBAOiBd,GAEjBO,EAAAC,EAAAC,cAACU,EAAA,EAAU5B,KAAX,CAAgBoB,MAAO,CAAEG,gBAAiB,YAA1C,eACeZ,IAIjBK,EAAAC,EAAAC,cAACC,EAAA,EAAKU,KAAN,kBAAsB3B,EAAK4B,kCCoIpBC,oNAhKbC,MAAQ,CACNC,MAAO,CACL,MACA,MACA,MACA,MACA,OAEFC,QAAS,EACTC,SAAU,GACV9B,SAAU,GACV+B,UAAW,GACX9B,OAAO,KAGT+B,kBAAoB,WAClBC,EAAKC,kBAGPC,mBAAqB,WACfF,EAAKN,MAAMC,MAAMQ,OAAS,GACxBH,EAAKN,MAAME,SAAWI,EAAKN,MAAMC,MAAMQ,QACzCH,EAAKI,SAAS,CAAER,QAAS,OAK/BS,aAAe,SAAAC,GAEb,GADAA,EAAMC,iBACFP,EAAKN,MAAMI,UAAUU,WAAW,KAAM,CACxC,IAAMC,EAAWT,EAAKN,MAAMC,MAAMe,OAAO,SAAAC,GAEvC,OAAOA,GAAQX,EAAKN,MAAMI,UAAUc,MAAM,KAGtCC,EAAcb,EAAKN,MAAMG,SAASa,OAAO,SAAAC,GAE7C,OAAOA,EAAKjD,KAAK8B,IAAMQ,EAAKN,MAAMI,UAAUc,MAAM,KAGpDZ,EAAKI,SAAS,CAAET,MAAOc,EAAUZ,SAAUgB,QACtC,CACYb,EAAKN,MAAMC,MACnBmB,KAAKC,OAAOf,EAAKN,MAAMI,gBAIpCkB,qBAAuB,SAAAV,GACrBN,EAAKI,SAAS,CAAErC,SAAUuC,EAAMW,OAAOC,WAGzCC,sBAAwB,SAAAb,GACtBN,EAAKI,SAAS,CAAEN,UAAWQ,EAAMW,OAAOC,WAG1CE,WAAa,WACXpB,EAAKI,SAAS,SAACiB,EAAWC,GACxB,MAAO,CAAEtD,OAAQqD,EAAUrD,YAI/BiC,aAAe,WACbsB,YAAY,WACNvB,EAAKN,MAAMC,MAAMQ,OAAS,IAC5BH,EAAKwB,UAAUxB,EAAKN,MAAMC,MAAMK,EAAKN,MAAME,UAE3CI,EAAKI,SAAS,WACZ,MAAO,CAAER,QAASI,EAAKN,MAAME,QAAU,OAG1C,QAGL4B,UAAY,SAAAb,GACV,IAAMd,EAAWG,EAAKN,MAAMG,SAI5B4B,IACGC,IADH,GAAAC,OAHY,qBAGZ,4BAAAA,OACwChB,EADxC,SAAAgB,OAFY,6BAITC,KAAK,SAAAC,GACe,MAAfA,EAAIC,SACNjC,EAASG,EAAKN,MAAME,SAAWiC,EAAIE,KACnC/B,EAAKI,SAAS,CAAEP,SAAUA,OAG7BmC,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,sBAAuBF,8EAG9C,IAAAG,EAAAC,KACP,OACE3D,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACbX,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEjD,UAAU,cACVkD,QAASF,KAAKjB,WACdoB,QAASH,KAAK3C,MAAM1B,MAAQ,SAAW,WAEtCqE,KAAK3C,MAAM1B,MAAQ,SAAW,QAEjCU,EAAAC,EAAAC,cAAA,MAAIS,UAAU,YAAd,sBACAX,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMC,SAAUL,KAAKhC,aAAchB,UAAU,cAC3CX,EAAAC,EAAAC,cAAC6D,EAAA,EAAKE,IAAN,KACEjE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KACElE,EAAAC,EAAAC,cAAC6D,EAAA,EAAKI,QAAN,CACEC,SAAUT,KAAKrB,qBACf+B,KAAK,OACL7B,MAAOmB,KAAK3C,MAAM3B,SAClBiF,YAAY,oBAGhBtE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KACElE,EAAAC,EAAAC,cAAC6D,EAAA,EAAKI,QAAN,CACEE,KAAK,OACLD,SAAUT,KAAKlB,sBACfD,MAAOmB,KAAK3C,MAAMI,UAClBkD,YAAY,aAGhBtE,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KACElE,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAQE,QAAQ,OAAOO,KAAK,SAASE,OAAK,GAA1C,aAMLZ,KAAK3C,MAAMC,MAAMQ,SAAWkC,KAAK3C,MAAMG,SAASM,QAC/CzB,EAAAC,EAAAC,cAAA,iFAIFF,EAAAC,EAAAC,cAAA,MAAIS,UAAU,gBAAd,gBACAX,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEoE,UAAW,WAAvB,uEAEExE,EAAAC,EAAAC,cAAA,WAFF,mCAEwCF,EAAAC,EAAAC,cAAA,qBAFxC,6CAGgCF,EAAAC,EAAAC,cAAA,uBAEhCF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,SACZgD,KAAK3C,MAAMC,MAAMQ,QAChBkC,KAAK3C,MAAMG,SAASsD,IAAI,SAAAxC,GACtB,IAAMyC,EAAezC,EAAK0C,OAAOC,KAAK,SAAC3E,EAAG4E,GACxC,OAAO5E,EAAEP,aAAemF,EAAEnF,eAG5B,OACEM,EAAAC,EAAAC,cAAClB,EAAD,CACEK,SAAUqE,EAAK1C,MAAM3B,SACrByF,IAAK7C,EAAK0C,OAAO,GAAG7D,GAAKiE,KAAKC,SAC9B7F,KAAM8C,EAAKjD,KAAKiG,KAChB/F,KAAMwF,EAAa,GACnBtF,WAAYsF,EAAa,GACzBpF,MAAOoE,EAAK1C,MAAM1B,mBAvJlB4F,cCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7C,KAAK,SAAA8C,GACjCA,EAAaC","file":"static/js/main.4ae900c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mario-coin.8e3ab67b.wav\";","module.exports = __webpack_public_path__ + \"static/media/finalf.e8e60fea.ttf\";","import React from \"react\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\nimport soundFile from \"../data/mario-coin.wav\";\r\n\r\nexport default function Item({ info, name, competitor, userName, muted }) {\r\n  const lister = info.CraftSignature;\r\n  const price = info.PricePerUnit;\r\n  const secondPrice = competitor.PricePerUnit;\r\n  const alert = new Audio(soundFile);\r\n\r\n  if (userName !== lister && !muted) {\r\n    alert.play();\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      style={{ width: \"18rem\", margin: \"10px\", backgroundColor: \"#99AAB5\" }}\r\n    >\r\n      <Card.Body>\r\n        <Card.Title>{name}</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">{lister}</Card.Subtitle>\r\n        <ListGroup>\r\n          <ListGroup.Item\r\n            style={\r\n              userName !== lister\r\n                ? { backgroundColor: \"red\" }\r\n                : { backgroundColor: \"#7289DA\" }\r\n            }\r\n          >\r\n            Lowest Price: {price}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item style={{ backgroundColor: \"#7289DA\" }}>\r\n            2nd lowest: {secondPrice}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n        {/* <Card.Text>Price: {price}</Card.Text> */}\r\n        <Card.Text>Item ID #:{info.ID}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Item from \"./components/Item\";\nimport { Button, Col, Form } from \"react-bootstrap\";\nimport FinalFontasy from \"./data/finalf.ttf\";\n\nclass App extends Component {\n  state = {\n    items: [\n      23769, // knuckles\n      23770, // axe\n      23771, // lance\n      23774, // odachi\n      23781 // katana\n    ],\n    counter: 0,\n    itemInfo: [],\n    userName: \"\",\n    itemField: \"\",\n    muted: false\n  };\n\n  componentDidMount = () => {\n    this.staggerCalls();\n  };\n\n  componentDidUpdate = () => {\n    if (this.state.items.length > 0) {\n      if (this.state.counter >= this.state.items.length) {\n        this.setState({ counter: 0 });\n      }\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.itemField.startsWith(\"-\")) {\n      const newItems = this.state.items.filter(item => {\n        // eslint-disable-next-line\n        return item != this.state.itemField.slice(1);\n      });\n\n      const newItemInfo = this.state.itemInfo.filter(item => {\n        // eslint-disable-next-line\n        return item.Item.ID != this.state.itemField.slice(1);\n      });\n\n      this.setState({ items: newItems, itemInfo: newItemInfo });\n    } else {\n      const oldItems = this.state.items;\n      oldItems.push(Number(this.state.itemField));\n    }\n  };\n\n  handleUserNameChange = event => {\n    this.setState({ userName: event.target.value });\n  };\n\n  handleItemFieldChange = event => {\n    this.setState({ itemField: event.target.value });\n  };\n\n  handleMute = () => {\n    this.setState((prevState, props) => {\n      return { muted: !prevState.muted };\n    });\n  };\n\n  staggerCalls = () => {\n    setInterval(() => {\n      if (this.state.items.length > 0) {\n        this.getPrices(this.state.items[this.state.counter]);\n\n        this.setState(() => {\n          return { counter: this.state.counter + 1 };\n        });\n      }\n    }, 330);\n  };\n\n  getPrices = item => {\n    const itemInfo = this.state.itemInfo;\n    const url = \"https://xivapi.com\";\n    const key = \"d8e0653f39804f04aa69ab6a\";\n\n    axios\n      .get(`${url}/market/excalibur/items/${item}?key=${key}`)\n      .then(res => {\n        if (res.status === 200) {\n          itemInfo[this.state.counter] = res.data;\n          this.setState({ itemInfo: itemInfo });\n        }\n      })\n      .catch(error => console.log(\"You broke something\", error));\n  };\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <Button\n          className=\"mute-button\"\n          onClick={this.handleMute}\n          variant={this.state.muted ? \"danger\" : \"success\"}\n        >\n          {this.state.muted ? \"Unmute\" : \"Mute\"}\n        </Button>\n        <h1 className=\"headline\">FFXIV Item Watcher</h1>\n        <Form onSubmit={this.handleSubmit} className=\"input-form\">\n          <Form.Row>\n            <Col>\n              <Form.Control\n                onChange={this.handleUserNameChange}\n                type=\"text\"\n                value={this.state.userName}\n                placeholder=\"Character Name\"\n              />\n            </Col>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                onChange={this.handleItemFieldChange}\n                value={this.state.itemField}\n                placeholder=\"Item ID\"\n              />\n            </Col>\n            <Col>\n              <Button variant=\"info\" type=\"submit\" block>\n                Submit\n              </Button>\n            </Col>\n          </Form.Row>\n        </Form>\n        {this.state.items.length !== this.state.itemInfo.length && (\n          <code>\n            Loading items... If this takes too long you entered a bad item ID\n          </code>\n        )}\n        <h4 className=\"instructions\">Instructions</h4>\n        <p style={{ textAlign: \"center\" }}>\n          Enter your character name to be notified when someone undercuts you.\n          <br /> To add items enter the item ID <code>23788</code>. To remove\n          items put a '-' before the id <code>-23788</code>\n        </p>\n        <div className=\"items\">\n          {this.state.items.length &&\n            this.state.itemInfo.map(item => {\n              const cheapestItem = item.Prices.sort((a, b) => {\n                return a.PricePerUnit - b.PricePerUnit;\n              });\n\n              return (\n                <Item\n                  userName={this.state.userName}\n                  key={item.Prices[0].ID + Math.random()}\n                  name={item.Item.Name}\n                  info={cheapestItem[0]}\n                  competitor={cheapestItem[1]}\n                  muted={this.state.muted}\n                />\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}